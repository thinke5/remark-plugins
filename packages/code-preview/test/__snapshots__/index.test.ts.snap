// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should not transform code blocks that do not have \`preview\` attribute 1`] = `
"\`\`\`jsx
<Foo />
\`\`\`
"
`;

exports[`should support mata 1`] = `
"<h1>Example</h1>
<figure class="preview">
<figcaption>Code title</figcaption>
<div class="preview-showcase">
<div class="foo">Hello, World!</div>
</div>
<div class="preview-code">
<pre><code class="language-html">&#x3C;div class='foo'>Hello, World!&#x3C;/div>
</code></pre>
</div>
</figure>"
`;

exports[`should support mdx compiler 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
import {Foo} from 'foo';
function _createMdxContent(props) {
  const _components = {
    code: "code",
    div: "div",
    figcaption: "figcaption",
    figure: "figure",
    h1: "h1",
    p: "p",
    pre: "pre",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "Example"
    }), "\\n", _jsxs(_components.figure, {
      className: "preview",
      children: [_jsx(_components.p, {
        children: _jsx(_components.figcaption, {
          children: "Code title"
        })
      }), _jsx(_components.div, {
        className: "preview-showcase",
        children: _jsx(Foo, {})
      }), _jsx(_components.div, {
        className: "preview-code",
        children: _jsx(_components.pre, {
          children: _jsx(_components.code, {
            className: "language-jsx",
            children: "<Foo />\\n"
          })
        })
      })]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`should transform code blocks into code previews 1`] = `
"<h1>Example</h1>
<figure class="preview">
<figcaption>Code title</figcaption>
<div class="preview-showcase">
<div class="foo">Hello, World!</div>
</div>
<div class="preview-code">
<pre><code class="language-html">&#x3C;div class='foo'>Hello, World!&#x3C;/div>
</code></pre>
</div>
</figure>"
`;

exports[`should use a custom template when provided in options 1`] = `
"<figure class='foo'>
<figcaption>{title}</figcaption>
<div class='foo-preview'>
<div class='foo'>Hello, World!</div>
</div>
<div class='foo-code'>

\`\`\`html
<div class='foo'>Hello, World!</div>
\`\`\`

</div>
</figure>
"
`;

exports[`ÂèØ‰ª•Ê∑ªÂä†Êñá‰ª∂ÂÜÖÂÆπÂâçÁºÄ 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    code: "code",
    div: "div",
    figcaption: "figcaption",
    figure: "figure",
    h1: "h1",
    p: "p",
    pre: "pre",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "Test DEMO"
    }), "\\n", _jsx(_components.h1, {
      children: "Example"
    }), "\\n", _jsxs(_components.figure, {
      className: "preview",
      children: [_jsx(_components.p, {
        children: _jsx(_components.figcaption, {
          children: "Code title"
        })
      }), _jsx(_components.div, {
        className: "preview-showcase",
        children: _jsx(_components.p, {
          children: _jsx(_components.div, {
            class: "foo",
            children: "Hello, World!"
          })
        })
      }), _jsx(_components.div, {
        className: "preview-code",
        children: _jsx(_components.pre, {
          children: _jsx(_components.code, {
            className: "language-html",
            children: "<div class='foo'>Hello, World!</div>\\n"
          })
        })
      })]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`ÂèØ‰ª•Ê∑ªÂä†Êñá‰ª∂ÂÜÖÂÆπÂâçÁºÄ-import 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
import {Foo} from 'foo';
import {Bar} from 'bar';
import {C} from 'cc';
function _createMdxContent(props) {
  const _components = {
    code: "code",
    div: "div",
    figcaption: "figcaption",
    figure: "figure",
    h1: "h1",
    p: "p",
    pre: "pre",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "Example"
    }), "\\n", _jsxs(_components.figure, {
      className: "preview",
      children: [_jsx(_components.p, {
        children: _jsx(_components.figcaption, {
          children: "Code title"
        })
      }), _jsx(_components.div, {
        className: "preview-showcase",
        children: _jsx(_components.p, {
          children: _jsx(_components.div, {
            class: "foo",
            children: "Hello, World!"
          })
        })
      }), _jsx(_components.div, {
        className: "preview-code",
        children: _jsx(_components.pre, {
          children: _jsx(_components.code, {
            className: "language-html",
            children: "<div class='foo'>Hello, World!</div>\\n"
          })
        })
      })]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`Â§çÊùÇËΩ¨Êç¢-jsxËΩ¨dataUriÂØºÂÖ• 1`] = `
"<h1>ÊµãËØïÁöÑ doc</h1>
<ol>
<li>ÊµãËØï 1</li>
<li>ÊµãËØï 2<code>jsx</code></li>
</ol>
<p>‰ª£Á†Å<code>tsx</code></p>
import Component_mfl2m9n3__1de6zdbf9 from "data:text/tsx;base64,aW1wb3J0IHsgY3JlYXRlU2lnbmFsIH0gZnJvbSAnc29saWQtanMnCgovKiog6K6h5pWw5ZmoIOKMmu+4jyAqLwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb3VudGVyKCkgewogIGNvbnN0IFtudW0sIHNldE51bV0gPSBjcmVhdGVTaWduYWwoMCkKICByZXR1cm4gPGJ1dHRvbiBjbGFzcz0idGV4dC1yZWQgZm9udC02MDAiIG9uQ2xpY2s9eygpID0+IHNldE51bShudW0oKSArIDEpfT7orqHmlbAgPSB7bnVtKCl9PC9idXR0b24+Cn07";
<div><p></p><div>ËÆ°Êï∞Âô®</div><p></p><div><div></div></div><div><pre><code class="language-tsx">import { createSignal } from 'solid-js'

/** ËÆ°Êï∞Âô® ‚åöÔ∏è */
export default function Counter() {
  const [num, setNum] = createSignal(0)
  return &#x3C;button class="text-red font-600" onClick={() => setNum(num() + 1)}>ËÆ°Êï∞ = {num()}&#x3C;/button>
};
</code></pre></div></div>
<p>ÁªìÊùüüâë</p>"
`;

exports[`Â§çÊùÇËΩ¨Êç¢-jsxËΩ¨dataUriÂØºÂÖ•‰∏î‰ΩøÁî®ÂÖ∂‰ªñCodePreviewÁªÑ‰ª∂ 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
import {CodePreview} from '~/codePreview';
import Component_4 from "data:text/tsx;base64,aW1wb3J0IHsgY3JlYXRlU2lnbmFsIH0gZnJvbSAnc29saWQtanMnCgovKiog6K6h5pWw5ZmoIOKMmu+4jyAqLwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb3VudGVyKCkgewogIGNvbnN0IFtudW0sIHNldE51bV0gPSBjcmVhdGVTaWduYWwoMCkKICByZXR1cm4gPGJ1dHRvbiBjbGFzcz0idGV4dC1yZWQgZm9udC02MDAiIG9uQ2xpY2s9eygpID0+IHNldE51bShudW0oKSArIDEpfT7orqHmlbAgPSB7bnVtKCl9PC9idXR0b24+Cn07";
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h1: "h1",
    li: "li",
    ol: "ol",
    p: "p",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "ÊµãËØïÁöÑ doc"
    }), "\\n", _jsxs(_components.ol, {
      children: ["\\n", _jsx(_components.li, {
        children: "ÊµãËØï 1"
      }), "\\n", _jsxs(_components.li, {
        children: ["ÊµãËØï 2", _jsx(_components.code, {
          children: "jsx"
        })]
      }), "\\n"]
    }), "\\n", _jsxs(_components.p, {
      children: ["‰ª£Á†Å", _jsx(_components.code, {
        children: "tsx"
      })]
    }), "\\n", "\\n", _jsx(CodePreview, {
      preview: Component_4,
      code: "import { createSignal } from 'solid-js'\\n\\n/** ËÆ°Êï∞Âô® ‚åöÔ∏è */\\nexport default function Counter() {\\n  const [num, setNum] = createSignal(0)\\n  return <button class=\\"text-red font-600\\" onClick={() => setNum(num() + 1)}>ËÆ°Êï∞ = {num()}</button>\\n};",
      title: "ËÆ°Êï∞Âô®"
    }), "\\n", _jsx(_components.p, {
      children: "ÁªìÊùüüâë"
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;
